menu_file = File
menu_new = New
menu_open = Open
menu_save = Save
menu_saveas = Save as...
menu_recent = Recently used
menu_samples = Sample programs
menu_exit = Exit

menu_program = Program
menu_parse = Parse
menu_format = Format

menu_export = Export
menu_export_png = Export PNG
menu_export_svg = Export SVG

menu_settings = Settings
menu_stdlib = Enable standard library
menu_language = Language

menu_help = Help
menu_about = About
menu_show_standard = Show standard library
menu_reset_text_zoom = Reset text zoom
menu_reset_visualisation_zoom = Reset visualisation zoom

tooltip_new = Create new file
tooltip_open = Open file
tooltip_save = Save file
tooltip_parse = Parse program
tooltip_format = Format program
tooltip_previousstep = Previous step
tooltip_nextstep = Next step
tooltip_nextsolution = Next solution
tooltip_finishquery = Finish Query
tooltip_cancel = Cancel
tooltip_zoom_in = Zoom in
tooltip_zoom_out = Zoom out

zoom_target_visualisation = Visualisation
zoom_target_editor = Editor
zoom_target_console = Console
zoom_target_editor_console = Editor & Console
zoom_target_all = All

input_hint = Enter a new query...
visualisation_hint = Parse source code and\nenter a query to start the\nvisualisation...

about_name = VIPER Interactive Prolog Education Runtime
about_authors = Created by:
about_libraries = Using:
about_description = An educational tool for the Prolog programming language, developed as a PSE project at the KIT

dialog_yes = Yes
dialog_no = No
dialog_cancel = Cancel

confirm_new = Unsaved changes detected. Save changes?
confirm_new_title = New
confirm_close_title = Close

png_files = PNG-files (.png)
svg_files = SVG-files (.svg)
tikz_files = TikZ-Files (.tikz)
prolog_files = Prolog-Files (.pl)

open_file_success = Successfully opened file
save_file_success = Successfully saved file
export_file_success = Successfully exported file
editor_formatted = Successfully formatted source code
editor_already_formatted = Source code already properly formatted

open_file_error = Error opening file
save_file_error = Error saving file
export_file_error = Error exporting file
export_unsupported_format = Error exporting file, unsupported format

parser_success = Successfully parsed source code
conflicting_rules = The following rule(s) are already defined in the standard library: %s. This may lead to unexpected behavior. Rename your rules or deactivate the standard library.
parser_error = Error parsing source code
parser_query_error = Error parsing query

visualisation_started = Visualisation started.
viper_started = VIPER %s ready
visualisation_cut_note = Backtracking to this subgoal<br />will make %s fail
visualisation_cut_abort = Backtracking to this subgoal<br />will abort execution

arithmetic_unset_variable = Unset variable: %s
arithmetic_unsupported_term = Unsupported term: %s

solution_found = Found solution
solution_yes = yes
no_more_solutions = No more solutions.

button_send = Send

position = near %s in Line %d, Column %d
first_character = the first character
illegal_char = Illegal character
operator_not_recognized = Operator %s not recognized
expected_instead = Expected %s instead of '%s'
expected_goalrest = Expected 'is', '=' or arithmetic comparison, got '%s'
expected_list = Expected a list, got %s
expected_list_rest = Expected a list remainder, got %s
goal_not_supported = Goal not supported
no_knowledgebase_present = No knowledge base present

term = a term
functor = functor
unification = Unification
standard_library = Standard library
manual = Manual

tab_manual = Manual
tab_controls = Controls

manual_manual =\
<html>\
<b>Basic workflow:</b>\
<ol>\
  <li>Use the editor to enter your Prolog source code</li>\
  <li>Parse your source code by clicking the corresponding button in the menu bar or the toolbar</li>\
  <li>If the source code is valid, the input field will unlock and you can enter your query.<br\>\
      Invalid source code causes the parser to print an error message to the console</li>\
  <li>The query can be a single goal or it can consist of multiple goals, which are separated by a comma.<br\>\
  	  It can also consist of arithmetic terms and the "cut" goal.</li>\
  <li>Confirm your query by pressing the enter key or the corresponding send button</li>\
  <li>Control the interpretation by using the respective buttons in the menu bar or the toolbar.<br\></li>\
      Valid queries automatically generate a visualisation shown in the panel to the right\
</ol>\
<b>Console output:</b>\
<ul>\
  <li>The output area has three different output types: info, error and success</li>\
  <li>Info: Black text, mostly information about file operations</li>\
  <li>Error: Red text, mostly caused by unsuccessful parsing or file operations</li>\
  <li>Success: Green text, used for succesful results during interpretation</li>\
</ul>\
</html>\

manual_controls =\
<html>\
  <b>Scaling the editor and console text:</b>\
  <ul>\
    <li>While focusing the editor: CTRL + Plus/Minus/Mousewheel</li>\
    <li>Using the Text-Zoom buttons in the upper right corner</li>\
  </ul>\
  <b>Navigating the visualisation:</b>\
  <ul>\
    <li>Move inside the visualisation by dragging the mouse while holding the left mouse button</li>\
    <li>Zoom using the mouse wheel or the +/- buttons inside the visualisation panel</li>\
  </ul>\
  <b>Using the interpreter:</b>\
  <ul>\
    <li>Stepping operations can be issued by clicking the respective toolbar buttons</li>\
    <li>The next step and previous step operations both make the interpreter do a single step<\br>\
        in one direction</li>\
    <li>The next solution button makes the interpreter run until a new solution is found</li>\
    <li>The finish query button makes the interpreter run until no more solutions can be found</li>\
    <li>The search for a new solution or finishing the query can always be canceled using the<\br>\
    	respective cancel button. This causes the interpretation to finish the current step and then pause</li>\
  </ul>\
</html>\
