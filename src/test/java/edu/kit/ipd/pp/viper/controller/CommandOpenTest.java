package edu.kit.ipd.pp.viper.controller;

import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.io.File;

import org.junit.Test;

public class CommandOpenTest extends ControllerTest {
    /**
     * Tests the reading routine.
     */
    @Test
    public void readingTest() {
        CommandOpen c = this.gui.getCommandOpen();
        this.gui.getConsolePanel().clearAll();
        final String text = c.getFileText(new File(this.getClass().getResource("/inputTestFile.txt").getPath()));

        assertTrue(text.trim().equals("02340520350130523050235"));
    }

    /**
     * Tests for correct error output.
     */
    @Test
    public void errorOutputTest() {
        CommandOpen c = this.gui.getCommandOpen();
        this.gui.getConsolePanel().clearAll();
        c.printOpenError(null, "/test/test.pl");

        final String expected = LanguageManager.getInstance().getString(LanguageKey.OPEN_FILE_ERROR) + ": "
                + "/test/test.pl";
        assertTrue(this.gui.getConsolePanel().getOutputAreaText().trim().equals(expected));
    }

    /**
     * Tests whether the UI gets updated properly.
     */
    @Test
    public void UIUpdateTest() {
        File file = new File("");
        this.gui.getCommandOpen().updateUI(file);
        assertTrue(this.gui.getEditorPanel().hasFileReference());
        assertFalse(this.gui.getEditorPanel().hasChanged());

        final String expected = LanguageManager.getInstance().getString(LanguageKey.OPEN_FILE_SUCCESS) + ": "
                + file.getAbsolutePath();
        assertTrue(this.gui.getConsolePanel().getOutputAreaText().trim().equals(expected));
        file.delete();
    }
}
